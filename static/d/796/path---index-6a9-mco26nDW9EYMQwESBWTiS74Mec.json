{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"link":"ReactTransitionReplace","title":"React Transition Replace"},"html":"<h1>React Transition Replace</h1>\n<blockquote>\n    <p>\n        Exposes simple components useful for defining entering and exiting\n        transitions. React Transition Group is not an animation library\n        like{' '}\n        <a href=\"https://github.com/chenglou/react-motion\">\n            React-Motion\n        </a>, it does not animate styles by itself. Instead it exposes\n        transition stages, manages classes and group elements and\n        manipulates the DOM in useful ways, making the implementation of\n        actual visual transitions much easier.\n    </p>\n</blockquote>"}},{"node":{"frontmatter":{"link":"GettingStarted","title":"Getting Started"},"html":"<h4>Installation</h4>\n<p>To install via <code class=\"language-text\">npm</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># npm install react-transition-replace --save</span></code></pre>\n      </div>\n<p> or <code class=\"language-text\">yarn</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># yarn add react-transition-replace</span></code></pre>\n      </div>\n<p><em>The component is intended to work with <code class=\"language-text\">react-transition-group@2.x.x</code>\nand utilises some of its components: <code class=\"language-text\">Transition</code> and <code class=\"language-text\">CSSTransition</code>.</em></p>\n<h4>CDN / External</h4>\n<p>Since react-transition-replace is fairly small, the overhead of including\nthe library in your application is negligible. However, in situations\nwhere it may be useful to benefit from an external CDN when bundling,\nlink to the following CDN: <a href=\"https://unpkg.com/react-transition-replace/browser/react-transition-replace.min.js\">https://unpkg.com/react-transition-replace/browser/react-transition-replace.min.js</a></p>"}},{"node":{"frontmatter":{"link":"Troubleshooting","title":"Troubleshooting"},"html":"<h4>Old NodeJS</h4>\n<p>Because of different implementation of module importing in NodeJS and\nlack of default imports support to use <code class=\"language-text\">react-transiton-replace</code> NodeJS\nyou need to do use Common JS import:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> TransitionReplace  <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-transition-replace'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h4>Components containing images</h4>\n<p>There is know issue with correctly transitioning components that contain\nresponsive images. The problem comes from incorrect height of elements\ncalculated at the time or component update. Images might not be yet loaded\nand the time the component that needs to be transitioned and thus can't\ncorrectly calculate the height of the whole element. Thay happens because\nimages are being loaded after the element is inserted into the DOM tree\nand before that have initial height of <code class=\"language-text\">0</code>.</p>\n<p>There are few workarounds for this:</p>\n<ul>\n<li>You can specify the <code class=\"language-text\">width</code> and/or <code class=\"language-text\">height</code> attributes on <code class=\"language-text\">&lt;img/&gt;</code> element.</li>\n<li>You can preload the images and render component when that is completed. Some technique is explained <a href=\"http://www.thonky.com/javascript-and-css-guide/javascript-image-preload\">here</a>.</li>\n<li>If you're dealing with responsive images which have <code class=\"language-text\">height: auto</code> CSS property and you know the width/height ratio, you can use <a href=\"http://andyshora.com/css-image-container-padding-hack.html\">this</a> workaround.\nOtherwise there is a way to use media queries for <code class=\"language-text\">srcset</code> attribute on <code class=\"language-text\">&lt;img/&gt;</code>, which is explained <a href=\"https://bitsofco.de/the-srcset-and-sizes-attributes/\">here</a></li>\n</ul>\n<h4>Typescript</h4>\n<p>The library is written in Typescript and thus already contains its types\ndefinitions however you need to include types definitions for\n<code class=\"language-text\">react-transition-group</code> (they are defined as peer dependency).\nPlease refer to the definitions from Definitely Typed published as\n<a href=\"https://www.npmjs.com/package/@types/react-transition-group\"><code class=\"language-text\">@types/react-transition-group</code></a>.</p>"}}]},"site":{"siteMetadata":{"componentPages":[{"codeSandboxId":"FAKE","displayName":"TransitionReplace","path":"/transition-replace"},{"codeSandboxId":"FAKE","displayName":"SwitchTransition","path":"/react-router/switch-transition"}],"title":"React Transition Replace","version":"0.2.8"}}},"pageContext":{}}